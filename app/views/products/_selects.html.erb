<% ov_combinations = options_values_combinations(@product) %>

    <% default_values = @product.default_variant.option_values.group_by{|ov| ov.option_type_id} if @product.default_variant %>
    <% selected_values = [] %>
    <% @product.option_types.uniq.each do |option_type|
      default_value = default_values[option_type.id].first;
  options = option_type.option_values.map do |ov|
    [ov.presentation, ov.id, ov == default_value, !possible_combination?(ov_combinations, selected_values+[ov.id])]
  end.compact %>
  <div class="option-type-wrapper" id="option-type_<%=option_type.name%>">
    <span class="option-type"><%= option_type.presentation %></span>
    <% select_options = options.map{|o|
      selected_attribute = ' selected="selected"' if o[2]
      disabled_attribute = ' disabled="disabled"' if o[3]
      %(<option value="#{html_escape(o[1].to_s)}"#{selected_attribute}#{disabled_attribute}>#{html_escape(o[0].to_s)}</option>)
    } %>
    <%= select_tag("option_values[#{@product.id}][#{option_type.id}]", select_options, :class=>"option-type" ) %>
  </div>
  <% selected_values << default_value.id;
end %>

      <span class="option-type"><%= option_type.presentation %></span>
      <%= select_tag("option_values[#{@product.id}][#{option_type.id}]", options_for_select(options, default_value.id) ) %>

      <% selected_values << default_value.id;
    end %>

<% js_ov_to_variant_map = {}
ov_to_variant_map(@product).each_pair do |k,v|
  js_ov_to_variant_map[k.join(',')] = v.attributes.merge(:on_hand => v.on_hand)
end
%>
<script type="text/javascript">
  // set of all possible combination of option values
  var ov_combinations = <%= ov_combinations.to_json %>;
  // mapping to variant attributes, so we can get variant price dynamically
  var ov_to_variant = <%= js_ov_to_variant_map.to_json %>
</script>
<%#
  WARNING! This scripts are inlined here on purpose! for ease of embeding and customization.
  If you plan to extract them and put them into header, don't.
  And if you really really really want to please make sure they are wrapped into
  document ready event (it's not needed here as we put script AFTER everything we need is in DOM and loaded)
%>
<script type="text/javascript" src="/javascripts/eot-common.js"></script>
<script type="text/javascript" src="/javascripts/eot-radio.js"></script>
